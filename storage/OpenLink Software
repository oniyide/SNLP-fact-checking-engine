Virtuoso Universal Server
Virtuoso Conductor (Database Administration User Interface)
Developer(s) OpenLink Software

Stable release 82 / October 2018

Repository githubcom/openlink/virtuoso opensource
Written in C
Operating system Cross platform
Type Triplestore, RDBMS, Application server, Web server
License GPLv2 and proprietary
Website Official website
Virtuoso Universal Server is a middleware and database engine hybrid that combines the functionality of a traditional Relational database management system (RDBMS), Object-relational database (ORDBMS), virtual database, RDF, XML, free-text, web application server and file server functionality in a single system. Rather than have dedicated servers for each of the aforementioned functionality realms, Virtuoso is a "universal server"; it enables a single multithreaded server process that implements multiple protocols. The free and open source edition of Virtuoso Universal Server is also known as OpenLink Virtuoso. The software has been developed by OpenLink Software with Kingsley Uyi Idehen and Orri Erling as the chief software architects.
Virtuoso provides an extended object-relational model, which combines the flexibility of relational access with inheritance, run time data typing, late binding, and identity-based access. Virtuoso Universal Server database includes physical file and in memory storage and operating system processes that interact with the storage. There is one main process, which has listeners on a specified port for HTTP, SOAP, and other protocols.
Virtuoso is designed to take advantage of operating system threading support and multiple CPUs. It consists of a single process with an adjustable pool of threads shared between clients. Multiple threads may work on a single index tree with minimal interference with each other. One cache of database pages is shared among all threads and old dirty pages are written back to disk as a background process.
The database has at all times a clean checkpoint state and a delta of committed or uncommitted changes to this checkpointed state. This makes it possible to do a clean backup of the checkpoint state while transactions proceed on the commit state.
A transaction log file records all transactions since the last checkpoint. Transaction log files may be preserved and archived for an indefinite time, providing a full, recoverable history of the database.
A single set of files is used for storing all tables. A separate set of files is used for all temporary data. The maximum size of a file set is 32 terabytes, for 4G × 8K pages.
Virtuoso provides dynamic locking, starting with row level locks and escalating to page level locks when a cursor holds a large percentage of a page's rows or when it has a history of locking entire pages. Lock escalation only happens when no other transactions hold locks on the same page, hence it never deadlocks. Virtuoso SQL provides means for exclusive read and for setting transaction isolation.
All four levels of isolation are supported: Dirty read, read committed, repeatable read and serializable. The level of isolation may be specified operation by operation within a single transaction. Virtuoso can also act as a resource manager and/or transaction coordinator under Microsoft's Distributed Transaction Coordinator (MS DTC) or the XA standard.
Virtuoso ORDBMS database supports entity integrity and referential integrity. Virtuoso ensures that relationships between records in related tables are valid by enforcing referential integrity. Integrity constraints include:
Virtuoso stores all its information about all user objects in the database in the system catalog tables designated by db.dba*.
Virtuoso is made up of client and server components. These components typically communicate with a local or remote Virtuoso server, which include:
Installations come with two databases: a default and a demo database.
The Virtuoso project was born in 1998 from a merger of the OpenLink data access middleware and Kubl RDBMS.
The Kubl ORDBMS was one of a list of relational database systems with roots in Finland. This list also includes MySQL, InnoDB, and Solid RDBMS/Solid Technologies.
As is the case with most technology products, key personnel behind OpenLink Virtuoso, InnoDB, and Solid share periods of professional overlap that provide noteworthy insight into the history of database technology development in Finland. Heikki Tuuri (creator of InnoDB), Ora Lassila (W3C and Nokia Research, a technology lead and visionary in the areas RDF and Semantic Web in general alongside Tim Berners-Lee), and Orri Erling (Virtuoso Program Manager at OpenLink Software) all worked together in a startup company called Entity Systems in Finland - where they were developing Common Lisp and Prolog development environments for the early generation of PC's circa. 1986–88.
Later, Orri Erling worked with VIA International, the developer of VIA/DRE in designing a LISP-based object-oriented data access layer atop the company's DBMS product. The core development team of VIA, following the company's demise in 1992, went on to found Solid Technologies under the direction of Artturi Tarjanne.
Heikki Tuuri worked at Solid for a while before starting his own database development project which became InnoDB (acquired by Oracle in 2005).
Orri Erling started his own DBMS development work in 1994, which was to become Kubl. Development of Kubl was initially financed by Infosto Group, publisher of Finland's largest free ads paper, as part of their in-house software development project for their on-line services. The on-line version of Keltainen Pörssi was at one time said to be Finland's most popular web site with 500,000 registered users. The Kubl database was prominently displayed in a "Powered by Kubl" logo on the search results.
A free trial version of Kubl was made available for download on November 7, 1996.
Kubl was marketed as a high performance lightweight database for embedded use; the development aim was to achieve top scores in Transactions Per Second tests. Pricing of the product was especially favorable to Linux users with a Linux license priced at $199.
Kubl became the cornerstone of OpenLink Virtuoso, after the technology paths of Kingsley Uyi Idehen and Orri Erling crossed in 1998, leading to the acquisition of Kubl by OpenLink Software.
Virtuoso's functionality covers a broad range of traditionally distinct realms in a single product offering. These functional realms include:
Virtuoso supports a broad range of industry standard Web & Internet protocols that includes:
HTTP, WebDAV, CalDAV, CardDAV, SOAP, UDDI, WSDL, WS-Policy, WS-Security, WS-ReliableMessaging, WS-Routing, WS-Referral, WS-Attachment, WS-BPEL, SyncML, GData, SPARQL, SPARUL, NNTP
For the database application developer and systems integrator, Virtuoso implements a variety of industry standard data access APIs (client and server) that includes: ODBC, JDBC, OLE DB, ADO.NET, ADO.NET Entity Framework, XMLA.
For the Web application developer and content syndicate(s) publishers, and consumers, Virtuoso supports standards such as: Atom, RSS 2.0, RSS 1.0, OPML, XBEL, FOAF, SIOC.
SQL, SPARQL (with numerous extensions), XQuery (implementation of Core functions library is seriously incomplete), XPath (1.0 only), XSLT (1.0 only)
SQL's Data Definition Language, XML Schema
Virtuoso is a solution for the following system integration challenges:
In addition to Virtuoso, OpenLink Software produces several related tools and applications:
Virtuoso is supported on a number of 32- and 64-bit platforms including cross-platform Windows, UNIX (HP, AIX, Sun, DEC, BSD, SCO), Linux (Red Hat, SUSE) and macOS.
In April 2006, a free software version of Virtuoso was made available under the GNU General Public License version 2. The software is now available in Commercial and Open Source license variants.
